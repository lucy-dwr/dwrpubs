% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/detect_authorship.R
\name{detect_authorship}
\alias{detect_authorship}
\title{Detect authorship matches on works}
\usage{
detect_authorship(
  data,
  pattern,
  source = c("crossref", "openalex"),
  column = NULL,
  flag_column = "has_affiliation_match",
  authorship_type = "any",
  ...
)
}
\arguments{
\item{data}{Tibble of works returned by \code{fetch_crossref_metadata()} or
\code{fetch_openalex_metadata()}.}

\item{pattern}{Pattern (regex or fixed string) evaluated against affiliation
and authorship fields.}

\item{source}{Data source structure; either \code{"crossref"} or \code{"openalex"}.}

\item{column}{Optional override for the column holding authorship data. When
omitted, defaults to \code{"author"} for Crossref and \code{"authorships"} for
OpenAlex.}

\item{flag_column}{Name of the logical column to append.}

\item{authorship_type}{Character vector indicating which authorship roles to
flag. Supported values are \code{"any"} (any matching author), \code{"lead"}
(first listed author matches), and \code{"sole"} (all available affiliations
match). Defaults to \code{"any"}. When multiple roles are requested the
function appends one column per role.}

\item{...}{Additional arguments forwarded to the underlying matcher.}
}
\value{
\code{data} with one or more added logical columns.
}
\description{
Adds a logical column indicating whether the supplied pattern appears in the
authorship or author fields, depending on the backend source.
}
